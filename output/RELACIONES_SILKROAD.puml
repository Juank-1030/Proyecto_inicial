@startuml silkroad_relaciones
!theme plain
skinparam linetype ortho
skinparam classBackgroundColor<<abstract>> #FFE6E6
skinparam classBackgroundColor<<concrete>> #E6F3FF

' ===================================
' JERARQUÍA DE ROBOTS
' ===================================

abstract class RobotAbstracto {
}

class Robot {
}

class NeverbackRobot {
}

class TenderRobot {
}

Robot --|> RobotAbstracto : extends
NeverbackRobot --|> RobotAbstracto : extends
TenderRobot --|> RobotAbstracto : extends

' ===================================
' JERARQUÍA DE TIENDAS
' ===================================

abstract class StoreAbstracto {
}

class Store {
}

class FighterStore {
}

class CasinoStore {
}

class AutonomousStore {
}

Store --|> StoreAbstracto : extends
FighterStore --|> StoreAbstracto : extends
CasinoStore --|> StoreAbstracto : extends
AutonomousStore --|> StoreAbstracto : extends

' ===================================
' CLASES VISUALES
' ===================================

class Cell {
}

class Road {
}

class ProgressBar {
}

' ===================================
' CLASES PRINCIPALES
' ===================================

class SilkRoad {
}

class SilkRoadContest {
}

' ===================================
' RELACIONES DE COMPOSICIÓN/ASOCIACIÓN
' ===================================

' SilkRoad usa Road
SilkRoad o-- Road : "1" uses

' SilkRoad usa ProgressBar
SilkRoad o-- ProgressBar : "1" uses

' SilkRoad contiene referencias a robots (array)
SilkRoad o-- RobotAbstracto : "many" contains

' SilkRoad contiene referencias a tiendas (array)
SilkRoad o-- StoreAbstracto : "many" contains

' Road contiene celdas (array)
Road o-- Cell : "many" contains

' Road usa referencias de robots
Road o-- RobotAbstracto : "1" uses

' Road usa referencias de tiendas
Road o-- StoreAbstracto : "1" uses

' ===================================
' RELACIÓN ENTRE CONTESTANTES
' ===================================

' SilkRoadContest CREA instancias de SilkRoad en simulate()
SilkRoadContest ..> SilkRoad : "creates (simulate())"

' ===================================
' NOTAS Y LEYENDA
' ===================================

note right of RobotAbstracto
  **Clase Base de Robots**
  Define interfaz común para todos los robots:
  - Movimiento
  - Visibilidad
  - Partes visuales (ojos, boca, cabeza)
end note

note right of StoreAbstracto
  **Clase Base de Tiendas**
  Define interfaz común para todas las tiendas:
  - Movimiento
  - Visibilidad
  - Partes visuales (base, techo)
end note

note bottom of SilkRoad
  **Orquestador Principal**
  - Gestiona robots y tiendas
  - Calcula ganancias
  - Controla visualización
  - Maneja movimientos
end note

note bottom of SilkRoadContest
  **Simulador de Concurso**
  - Método solve(): calcula ganancia numérica
  - Método simulate(): crea SilkRoad y ejecuta visualmente
  - Procesa eventos progresivos
end note

note bottom of Road
  **Representación Visual**
  - Espiral de celdas
  - Posiciones (x,y) para cada índice
  - Renderiza robots y tiendas
end note

@enduml
