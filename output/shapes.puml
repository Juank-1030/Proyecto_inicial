' Generated by UML Generator
' Encoded: xLVVRzCm47xlNs5fBobTAmQ8XmeGg1sq2CIqZW6FJd9BpL8xijqM6FlVETjnuYI5Rdj0a-2bgRyxtoz_TqvUAasbNg_odhfalA2IhaYIKwLUQIrPlDOmJmHVi1z07lQMB0MIC9daqEjPBJAXV4CLkUeHChn2MvebroInu8BnB0Sj-BZKCZeNw036vErhypI0q_Kg9vHRD9EqMB9aJDwuF-hHrC0nJIupATOydOXSh2LkmwUixSnND4Fpzc5G4N-5HAFvTqpfPn_iweKHg2Kj0F4PLSltj2X5XsHXy2ceHB92Cy6jyj3yk00ZpNIE7XPO7PuTaYrBzN9C6CUzIs3PKfUBE6k4s4SJWwf06UZIN3yepa21FcUAnJb46_SSarY872X7lOrWgT5A9Tr64Yv00a_01JucFe74UAlZitcEoLUweIEwrIERNs0C95NmEsk17eRsMaYeYoyZwydvyVw23LlATBHYUSuK88DIPUjIAmmbs4G2nCKIsC0o6UQv0dqo4ZJH4SoyuBf9IiCbIyn1GL4SPJMRl8zgH_lO7Q5t5i-IhPkwvycWRIhQQQLrKFtgO7SmlnFjnBQWowtYrCbyJ5AnHjAGv-JnwEZ9qLCJKygmqJH8NpiNfBCGzOF_L0B5i86cr1iAnSwE54v5kDCqyXMz1C_QuEmCFEURZk2WTUe7dLDVYGsScavgW-_WeeDzBDh8L6nv6vi9oNu8hccEUM31aEajEbgrSv1OoZyegLnitz_CdbVTQpDPKfw1eNF4OJiDZwkZvHeFrIODyjHgvX1Dykxy31ApB0CP5I0Jm82pZd_i9U-qsM6VcyilpQKBfH_GVy1Km8DoRfMpe_AG_YO_r3aHYjc6-LQEqEyxb8BHioFzO81MmNH6QDL6fpZYgBcZMfrqF7rplB2-iPEUc9u99hjPraE_QgZALdINflYtEJyBxqrSVwhAU-i6s3zTxa9if9MBCGg8qAITZJdQxehyxrARnafBccWIN6oMtmVVV1G-suFl7QJXtG1TNysBpj7T_Mqwm2HRw-wDTziskU4KlE_qDnoiAD7aucxuviDsJmDKi-zCibsZx_puz6m-gQVVuvjDFs_j__2xtyDl_oX2WfIVT0-6G_zfqa7iPrg92aJRxxnUDXgzSB9UvmNxWT_MAzzcXyEVNhc-c0EmOco0lGIUuhVhBm
' URL: http://www.plantuml.com/plantuml/uml/xLVVRzCm47xlNs5fBobTAmQ8XmeGg1sq2CIqZW6FJd9BpL8xijqM6FlVETjnuYI5Rdj0a-2bgRyxtoz_TqvUAasbNg_odhfalA2IhaYIKwLUQIrPlDOmJmHVi1z07lQMB0MIC9daqEjPBJAXV4CLkUeHChn2MvebroInu8BnB0Sj-BZKCZeNw036vErhypI0q_Kg9vHRD9EqMB9aJDwuF-hHrC0nJIupATOydOXSh2LkmwUixSnND4Fpzc5G4N-5HAFvTqpfPn_iweKHg2Kj0F4PLSltj2X5XsHXy2ceHB92Cy6jyj3yk00ZpNIE7XPO7PuTaYrBzN9C6CUzIs3PKfUBE6k4s4SJWwf06UZIN3yepa21FcUAnJb46_SSarY872X7lOrWgT5A9Tr64Yv00a_01JucFe74UAlZitcEoLUweIEwrIERNs0C95NmEsk17eRsMaYeYoyZwydvyVw23LlATBHYUSuK88DIPUjIAmmbs4G2nCKIsC0o6UQv0dqo4ZJH4SoyuBf9IiCbIyn1GL4SPJMRl8zgH_lO7Q5t5i-IhPkwvycWRIhQQQLrKFtgO7SmlnFjnBQWowtYrCbyJ5AnHjAGv-JnwEZ9qLCJKygmqJH8NpiNfBCGzOF_L0B5i86cr1iAnSwE54v5kDCqyXMz1C_QuEmCFEURZk2WTUe7dLDVYGsScavgW-_WeeDzBDh8L6nv6vi9oNu8hccEUM31aEajEbgrSv1OoZyegLnitz_CdbVTQpDPKfw1eNF4OJiDZwkZvHeFrIODyjHgvX1Dykxy31ApB0CP5I0Jm82pZd_i9U-qsM6VcyilpQKBfH_GVy1Km8DoRfMpe_AG_YO_r3aHYjc6-LQEqEyxb8BHioFzO81MmNH6QDL6fpZYgBcZMfrqF7rplB2-iPEUc9u99hjPraE_QgZALdINflYtEJyBxqrSVwhAU-i6s3zTxa9if9MBCGg8qAITZJdQxehyxrARnafBccWIN6oMtmVVV1G-suFl7QJXtG1TNysBpj7T_Mqwm2HRw-wDTziskU4KlE_qDnoiAD7aucxuviDsJmDKi-zCibsZx_puz6m-gQVVuvjDFs_j__2xtyDl_oX2WfIVT0-6G_zfqa7iPrg92aJRxxnUDXgzSB9UvmNxWT_MAzzcXyEVNhc-c0EmOco0lGIUuhVhBm
' Generated on: 2025-10-27T10:04:11.919100600

@startuml
skinparam classAttributeIconSize 0
hide circle

class Canvas {
  -{static} canvasSingleton: Canvas
  -frame: JFrame
  -canvas: CanvasPane
  -graphic: Graphics2D
  -backgroundColour: Color
  -canvasImage: Image
  -objects: List<Object>
  -shapes: HashMap<Object, ShapeDescription>
  --
  -Canvas(title: String, width: int, height: int, bgColour: Color)
  +{static} getCanvas(): Canvas
  +setVisible(visible: boolean): void
  +draw(referenceObject: Object, color: String, shape: java.awt.Shape): void
  +erase(referenceObject: Object): void
  +setForegroundColor(colorString: String): void
  +wait(milliseconds: int): void
  -redraw(): void
  -erase(): void
  +getSizeCanvasW(): int
  +getSizeCanvasH(): int
}

class CanvasPane {
  +paint(g: Graphics): void
}

class ShapeDescription {
  -shape: java.awt.Shape
  -colorString: String
  --
  +ShapeDescription(shape: java.awt.Shape, color: String)
  +draw(graphic: Graphics2D): void
}

class Circle {
  +{static} PI: double = 3.1416
  -diameter: int
  --
  +Circle()
  +Circle(areaDeseada: double)
  +Circle(diametroDeseado: int)
  +makeVisible(): void
  +makeInvisible(): void
  #draw(): void
  #erase(): void
  +moveRight(): void
  +moveLeft(): void
  +moveUp(): void
  +moveDown(): void
  +moveHorizontal(distance: int): void
  +moveVertical(distance: int): void
  +slowMoveHorizontal(distance: int): void
  +slowMoveVertical(distance: int): void
  +changeSize(newDiameter: int): void
  +changeColor(newColor: String): void
  +area(): double
  +bigger(percentage: int): void
  +getDiameter(): int
  +getX(): int
  +getY(): int
  +getColor(): String
  +isVisible(): boolean
  +setDiameter(diameter: int): void
  +setPosition(x: int, y: int): void
  +setColor(color: String): void
  +setVisible(isVisible: boolean): void
}

class Rectangle {
  +{static} EDGES: int = 4
  -height: int
  -width: int
  --
  +Rectangle()
  +makeVisible(): void
  +makeInvisible(): void
  +moveRight(): void
  +moveLeft(): void
  +moveUp(): void
  +moveDown(): void
  +moveHorizontal(distance: int): void
  +moveVertical(distance: int): void
  +slowMoveHorizontal(distance: int): void
  +slowMoveVertical(distance: int): void
  +changeSize(newHeight: int, newWidth: int): void
  +changeColor(newColor: String): void
  #draw(): void
  #erase(): void
  +getX(): int
  +getY(): int
  +getColor(): String
  +setHeight(height: int): void
  +setWidth(width: int): void
  +setPosition(x: int, y: int): void
  +setColor(color: String): void
  +setVisible(isVisible: boolean): void
}

abstract class Shape {
  #xPosition: int
  #yPosition: int
  #color: String
  #isVisible: boolean
  --
  +Shape()
  +Shape(xPosition: int, yPosition: int, color: String)
  +makeVisible(): void
  +makeInvisible(): void
  +changeColor(newColor: String): void
  +moveHorizontal(distance: int): void
  +moveVertical(distance: int): void
  +slowMoveHorizontal(distance: int): void
  +slowMoveVertical(distance: int): void
  +getXPosition(): int
  +getYPosition(): int
  +getColor(): String
  +isVisible(): boolean
  #draw(): void
  #erase(): void
}

class Triangle {
  +{static} VERTICES: int = 3
  -height: int
  -width: int
  --
  +Triangle()
  +makeVisible(): void
  +makeInvisible(): void
  +moveRight(): void
  +moveLeft(): void
  +moveUp(): void
  +moveDown(): void
  +moveHorizontal(distance: int): void
  +moveVertical(distance: int): void
  +slowMoveHorizontal(distance: int): void
  +slowMoveVertical(distance: int): void
  +changeSize(newHeight: int, newWidth: int): void
  +changeColor(newColor: String): void
  #draw(): void
  #erase(): void
  +setPosition(x: int, y: int): void
}

Canvas *-- Canvas
Canvas *-- CanvasPane
Canvas o-- ShapeDescription
Canvas ..> Shape
ShapeDescription *-- Shape
Circle --|> Shape
Rectangle --|> Shape
Triangle --|> Shape
@enduml