#BlueJ class context
comment0.target=Road
comment0.text=\r\n\ Representa\ un\ camino\ espiral\ de\ celdas\ en\ un\ canvas.\r\n\ Permite\ posicionar\ y\ mover\ visualmente\ un\ robot\ y\ una\ tienda\ a\ lo\ largo\ del\r\n\ camino.\r\n\ Mantiene\ una\ lista\ de\ celdas\ y\ una\ matriz\ de\ posiciones\ (x,y)\ por\ \u00EDndice\r\n\ l\u00F3gico.\r\n\ Proporciona\ m\u00E9todos\ para\ dibujar\ la\ espiral,\ asignar\ objetos\ a\ celdas,\r\n\ mover\ el\ robot\ con\ animaci\u00F3n\ o\ reposicionarlo\ instant\u00E1neamente.\r\n\ Tambi\u00E9n\ permite\ mostrar\ u\ ocultar\ todos\ los\ elementos\ visuales.\r\n\r\n\ @version\ 1.0\r\n\ @author\ OpenAI's\ ChatGPT\r\n
comment1.params=length
comment1.target=Road(int)
comment1.text=\r\n\ Constructor\ que\ inicializa\ la\ espiral\ con\ la\ longitud\ dada.\r\n\ \r\n\ @param\ length\ n\u00FAmero\ de\ celdas\ en\ la\ espiral\r\n
comment10.params=index
comment10.target=java.lang.String\ getCellInfo(int)
comment10.text=\r\n\ Devuelve\ informaci\u00F3n\ descriptiva\ de\ la\ celda\ en\ la\ posici\u00F3n\ indicada.\r\n\ Incluye\ el\ \u00EDndice\ de\ la\ celda\ y\ sus\ coordenadas\ (X,\ Y).\r\n\ Si\ el\ \u00EDndice\ est\u00E1\ fuera\ de\ rango,\ retorna\ un\ mensaje\ de\ error.\r\n\r\n\ @param\ index\ \u00EDndice\ de\ la\ celda\ a\ consultar\r\n\ @return\ String\ con\ la\ informaci\u00F3n\ de\ la\ celda\ o\ mensaje\ de\ error\ si\ el\ \u00EDndice\r\n\ \ \ \ \ \ \ \ \ es\ inv\u00E1lido\r\n
comment11.params=index
comment11.target=int\ getCellX(int)
comment11.text=\r\n\ Devuelve\ la\ coordenada\ X\ de\ la\ celda\ en\ la\ posici\u00F3n\ indicada.\r\n\ \r\n\ @param\ index\ \u00EDndice\ de\ la\ celda\ (0\ a\ length-1)\r\n\ @return\ coordenada\ X\ de\ la\ celda,\ o\ -1\ si\ el\ \u00EDndice\ es\ inv\u00E1lido\r\n
comment12.params=index
comment12.target=int\ getCellY(int)
comment12.text=\r\n\ Devuelve\ la\ coordenada\ Y\ de\ la\ celda\ en\ la\ posici\u00F3n\ indicada.\r\n\ \r\n\ @param\ index\ \u00EDndice\ de\ la\ celda\ (0\ a\ length-1)\r\n\ @return\ coordenada\ Y\ de\ la\ celda,\ o\ -1\ si\ el\ \u00EDndice\ es\ inv\u00E1lido\r\n
comment13.params=
comment13.target=void\ makeVisible()
comment13.text=\r\n\ Hace\ visibles\ todas\ las\ celdas,\ la\ tienda\ y\ el\ robot\ (si\ existen).\r\n\ Cambia\ el\ estado\ interno\ a\ visible\ y\ actualiza\ la\ visibilidad\ de\ los\r\n\ elementos\ gr\u00E1ficos\ asociados.\r\n
comment14.params=
comment14.target=void\ makeInvisible()
comment14.text=\r\n\ Hace\ invisibles\ todas\ las\ celdas,\ la\ tienda\ y\ el\ robot\ (si\ existen).\r\n\ Cambia\ el\ estado\ interno\ a\ invisible\ y\ actualiza\ la\ visibilidad\ de\ los\r\n\ elementos\ gr\u00E1ficos\ asociados.\r\n
comment15.params=store
comment15.target=void\ assignStore(StoreAbstracto)
comment15.text=\r\n\ Asocia\ una\ instancia\ de\ Store\ global\ para\ reubicarla\ en\ celdas.\r\n\ \r\n\ @param\ store\ instancia\ a\ asignar\r\n
comment16.params=robot
comment16.target=void\ assignRobot(RobotAbstracto)
comment16.text=\r\n\ Asocia\ una\ instancia\ de\ Robot\ global\ para\ reubicarla\ en\ celdas.\r\n\ \r\n\ @param\ robot\ instancia\ a\ asignar\r\n
comment17.params=robot\ store\ tengesDisponibles
comment17.target=int\ transferirTenges(RobotAbstracto,\ StoreAbstracto,\ int)
comment17.text=\r\n\ PATR\u00D3N\ MEDIATOR\:\ Road\ act\u00FAa\ como\ intermediario\ entre\ Robot\ y\ Store.\r\n\ Orquesta\ la\ transferencia\ de\ tenges\ sin\ que\ Robot\ y\ Store\ se\ conozcan.\r\n\ \r\n\ Flujo\:\r\n\ 1.\ Robot\ decide\ cu\u00E1ntos\ tenges\ puede\ recolectar\r\n\ 2.\ Store\ valida\ la\ transferencia\r\n\ 3.\ Road\ retorna\ la\ cantidad\ final\ transferida\r\n\ \r\n\ @param\ robot\ el\ robot\ que\ visita\ la\ tienda\r\n\ @param\ store\ la\ tienda\ siendo\ visitada\r\n\ @param\ tengesDisponibles\ cantidad\ total\ de\ tenges\ en\ la\ tienda\r\n\ @return\ cantidad\ real\ de\ tenges\ transferidos\r\n
comment2.params=
comment2.target=void\ drawSpiral()
comment2.text=\r\n\ Dibuja\ una\ espiral\ de\ celdas\ en\ el\ canvas.\r\n\ Calcula\ posiciones\ (x,y)\ para\ cada\ celda\ y\ las\ almacena\ en\ positions.\r\n\ La\ espiral\ comienza\ en\ la\ esquina\ superior\ izquierda\ y\ avanza\ en\ sentido\r\n\ horario.\r\n
comment3.params=location\ objectType
comment3.target=void\ assignObjectPosition(int,\ java.lang.String)
comment3.text=\r\n\ Asigna\ un\ objeto\ (store\ o\ robot)\ a\ una\ celda\ espec\u00EDfica.\r\n\ Reposiciona\ el\ objeto\ en\ la\ celda\ indicada,\ manteniendo\ su\ offset\ relativo.\r\n\ \r\n\ @param\ location\ \ \ \u00EDndice\ de\ celda\ (0\ a\ length-1)\r\n\ @param\ objectType\ "store"\ o\ "robot"\r\n
comment4.params=oldLocation\ meters\ robot
comment4.target=void\ moveRobotVisual(int,\ int,\ RobotAbstracto)
comment4.text=\r\n\ Mueve\ visualmente\ el\ robot\ a\ lo\ largo\ de\ la\ espiral,\ celda\ a\ celda.\r\n\ Mantiene\ el\ mismo\ offset\ relativo\ dentro\ de\ cada\ celda\ durante\ todo\ el\r\n\ recorrido.\r\n\ \r\n\ @param\ oldLocation\ \u00EDndice\ actual\ del\ robot\r\n\ @param\ meters\ \ \ \ \ \ desplazamiento\ (positivo\ o\ negativo)\r\n\ @param\ robot\ \ \ \ \ \ \ instancia\ del\ robot\ a\ mover\r\n
comment5.params=oldLocation\ meters\ robot
comment5.target=void\ reposition(int,\ int,\ RobotAbstracto)
comment5.text=\r\n\ Reposiciona\ instant\u00E1neamente\ el\ robot\ a\ una\ celda\ espec\u00EDfica.\r\n\ Mantiene\ el\ mismo\ offset\ relativo\ dentro\ de\ la\ celda.\r\n\ No\ hay\ animaci\u00F3n,\ el\ robot\ "salta"\ a\ la\ nueva\ posici\u00F3n.\r\n\ \r\n\ @param\ oldLocation\ \u00EDndice\ actual\ del\ robot\r\n\ @param\ meters\ \ \ \ \ \ desplazamiento\ (positivo\ o\ negativo)\r\n\ @param\ robot\ \ \ \ \ \ \ instancia\ del\ robot\ a\ reposicionar\r\n
comment6.params=px\ py
comment6.target=void\ addCell(int,\ int)
comment6.text=\r\n\ Crea\ una\ celda\ en\ la\ posici\u00F3n\ (px,py)\ y\ la\ a\u00F1ade\ a\ la\ lista\ cells.\r\n\ \r\n\ @param\ px\ coordenada\ X\r\n\ @param\ py\ coordenada\ Y\r\n
comment7.params=index\ x\ y
comment7.target=void\ cellPosition(int,\ int,\ int)
comment7.text=\r\n\ Almacena\ las\ coordenadas\ (x,y)\ de\ una\ celda\ en\ la\ matriz\ positions.\r\n\ \r\n\ @param\ index\ \u00EDndice\ de\ celda\r\n\ @param\ x\ \ \ \ \ coordenada\ X\r\n\ @param\ y\ \ \ \ \ coordenada\ Y\r\n
comment8.params=
comment8.target=java.util.ArrayList\ getCells()
comment8.text=\r\n\ @return\ lista\ de\ celdas\ que\ forman\ la\ espiral.\r\n
comment9.params=
comment9.target=int[][]\ getPositions()
comment9.text=\r\n\ @return\ matriz\ de\ posiciones\ (x,y)\ por\ \u00EDndice\ l\u00F3gico\ de\ celda.\r\n
numComments=18
