#BlueJ class context
comment0.target=RobotAbstracto
comment0.text=\r\n\ Clase\ abstracta\ que\ define\ la\ estructura\ base\ para\ todos\ los\ robots\ en\r\n\ SilkRoad.\r\n\ Contiene\ la\ l\u00F3gica\ com\u00FAn\ de\ movimiento,\ visualizaci\u00F3n\ y\ actualizaci\u00F3n\ de\r\n\ partes.\r\n\ \r\n\ Las\ subclases\ (Robot,\ FastRobot,\ HeavyRobot,\ etc.)\ solo\ necesitan\:\r\n\ -\ Inicializar\ las\ partes\ visuales\ en\ el\ constructor\r\n\ -\ Implementar\ updateParts()\ con\ la\ l\u00F3gica\ espec\u00EDfica\ de\ su\ dise\u00F1o\r\n\ -\ Personalizar\ getSpeed()\ o\ makeVisible/makeInvisible\ si\ es\ necesario\r\n\r\n\ @author\ Sistema\ de\ Herencia\ -\ Ciclo\ 3\r\n\ @version\ 1.0\r\n
comment1.params=visible
comment1.target=RobotAbstracto(boolean)
comment1.text=\r\n\ Constructor\ base\ para\ todos\ los\ robots.\r\n\ \r\n\ @param\ visible\ estado\ inicial\ de\ visibilidad\r\n
comment10.params=tengesDisponibles
comment10.target=int\ recolectarTenges(int)
comment10.text=\r\n\ Recolecta\ tenges\ de\ una\ tienda.\r\n\ Este\ m\u00E9todo\ define\ c\u00F3mo\ cada\ robot\ recolecta\ dinero.\r\n\ Por\ defecto,\ el\ robot\ recolecta\ TODOS\ los\ tenges\ disponibles.\r\n\ Las\ subclases\ pueden\ sobrescribir\ para\ comportamiento\ especial.\r\n\ \r\n\ \u2705\ MEDIATOR\:\ Robot\ solo\ recibe\ cantidad,\ NO\ conoce\ a\ la\ Store\r\n\ Road\ act\u00FAa\ como\ intermediario\ entre\ Robot\ y\ Store.\r\n\ \r\n\ Ejemplo\ de\ polimorfismo\:\r\n\ -\ Robot\ normal\:\ retorna\ todos\ los\ tenges\r\n\ -\ TenderRobot\:\ retorna\ la\ mitad\r\n\ -\ FuturoRobot\:\ retorna\ seg\u00FAn\ su\ propia\ l\u00F3gica\r\n\ \r\n\ @param\ tengesDisponibles\ cantidad\ de\ tenges\ en\ la\ tienda\r\n\ @return\ cantidad\ de\ tenges\ que\ el\ robot\ recolecta\r\n
comment11.params=
comment11.target=java.lang.String\ getRandomColor()
comment11.text=\r\n\ Selecciona\ un\ color\ aleatorio\ para\ el\ robot.\r\n\ Disponible\ para\ todas\ las\ subclases.\r\n\ \r\n\ @return\ color\ elegido\r\n
comment12.params=
comment12.target=int\ getX()
comment12.text=\r\n\ @return\ coordenada\ X\ actual\ del\ robot\r\n
comment13.params=
comment13.target=int\ getY()
comment13.text=\r\n\ @return\ coordenada\ Y\ actual\ del\ robot\r\n
comment14.params=
comment14.target=java.lang.String\ getColor()
comment14.text=\r\n\ @return\ color\ actual\ del\ robot\r\n
comment15.params=
comment15.target=boolean\ isVisible()
comment15.text=\r\n\ @return\ true\ si\ el\ robot\ est\u00E1\ visible\r\n
comment16.params=tengesRecolectados\ distancia
comment16.target=int\ calcularGanancia(int,\ int)
comment16.text=\r\n\ Calcula\ la\ ganancia\ neta\ del\ robot\ al\ recolectar\ dinero.\r\n\ Ganancia\ \=\ dinero\ recolectado\ -\ costo\ de\ movimiento\r\n\ \r\n\ Cada\ tipo\ de\ robot\ puede\ personalizar\ este\ c\u00E1lculo\ si\ es\ necesario.\r\n\ Por\ defecto\:\ ganancia\ simple\ \=\ dinero\ -\ distancia\r\n\ \r\n\ @param\ tengesRecolectados\ cantidad\ de\ dinero\ recolectado\ de\ la\ tienda\r\n\ @param\ distancia\ distancia\ recorrida\ (costo\ del\ movimiento)\r\n\ @return\ ganancia\ neta\ (puede\ ser\ negativa)\r\n
comment17.params=
comment17.target=java.lang.String\ getTipo()
comment17.text=\r\n\ Devuelve\ el\ tipo\ de\ robot\ como\ String\ para\ identificaci\u00F3n.\r\n\ Las\ subclases\ pueden\ sobrescribir\ para\ personalizar.\r\n\ Por\ defecto\ retorna\ el\ nombre\ de\ la\ clase.\r\n\ \r\n\ @return\ tipo\ de\ robot\ ("Robot",\ "TenderRobot",\ "NeverbackRobot",\ etc.)\r\n
comment18.params=
comment18.target=java.lang.String\ obtenerMensajeRechazo()
comment18.text=\r\n\ Retorna\ el\ mensaje\ de\ rechazo\ cuando\ un\ robot\ no\ puede\ realizar\ una\ acci\u00F3n.\r\n\ Por\ defecto\ no\ hay\ rechazo\ (retorna\ cadena\ vac\u00EDa).\r\n\ Las\ subclases\ especializadas\ pueden\ sobrescribir\ para\ personalizar\ el\ mensaje.\r\n\ \r\n\ @return\ mensaje\ de\ rechazo\ personalizado\ para\ este\ tipo\ de\ robot\r\n
comment2.params=x\ y
comment2.target=void\ moveTo(int,\ int)
comment2.text=\r\n\ Mueve\ el\ robot\ a\ una\ posici\u00F3n\ espec\u00EDfica\ mostrando\ el\ desplazamiento\ animado.\r\n\ Llama\ a\ slowMoveTo()\ que\ hereda\ toda\ la\ l\u00F3gica\ de\ animaci\u00F3n.\r\n\ \r\n\ @param\ x\ nueva\ coordenada\ X\r\n\ @param\ y\ nueva\ coordenada\ Y\r\n
comment3.params=targetX\ targetY
comment3.target=void\ slowMoveTo(int,\ int)
comment3.text=\r\n\ Movimiento\ gradual\ del\ robot\ desde\ su\ posici\u00F3n\ actual\ hasta\ (targetX,\r\n\ targetY).\r\n\ Usa\ getSpeed()\ para\ permitir\ personalizaci\u00F3n\ de\ velocidad\ en\ subclases.\r\n\ Llama\ a\ updateParts()\ para\ que\ cada\ robot\ actualice\ sus\ partes\ de\ forma\r\n\ espec\u00EDfica.\r\n\ \r\n\ \u2705\ Este\ m\u00E9todo\ NO\ se\ duplica\ en\ subclases\r\n\ \u2705\ Las\ subclases\ solo\ cambian\ getSpeed()\ o\ updateParts()\ si\ es\ necesario\r\n
comment4.params=x\ y
comment4.target=void\ placeTo(int,\ int)
comment4.text=\r\n\ Coloca\ el\ robot\ directamente\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica\ sin\ animaci\u00F3n.\r\n\ \r\n\ @param\ x\ coordenada\ X\ donde\ aparecer\u00E1\r\n\ @param\ y\ coordenada\ Y\ donde\ aparecer\u00E1\r\n
comment5.params=
comment5.target=void\ initializeVisualParts()
comment5.text=\r\n\ Inicializa\ todas\ las\ partes\ visuales\ del\ robot\ (cabeza,\ ojos,\ boca).\r\n\ Este\ m\u00E9todo\ CENTRALIZA\ la\ construcci\u00F3n\ visual\ para\ evitar\ duplicaci\u00F3n.\r\n\ \r\n\ \u2705\ LLAMAR\ en\ el\ constructor\ de\ cada\ subclase\ as\u00ED\:\r\n\ super(visible);\r\n\ this.size\ \=\ 15;\ //\ Personalizar\ tama\u00F1o\ si\ es\ necesario\r\n\ this.positionX\ \=\ 36;\r\n\ this.positionY\ \=\ 58;\r\n\ this.color\ \=\ getRandomColor();\r\n\ initializeVisualParts();\ //\ \u2190\ Crea\ todas\ las\ partes\r\n\ if\ (visible)\ {\ makeVisible();\ }\r\n\ this.isVisible\ \=\ visible;\r\n\ \r\n\ @param\ visible\ true\ para\ mostrar\ las\ partes\ inmediatamente\r\n
comment6.params=
comment6.target=int\ getSpeed()
comment6.text=\r\n\ Hook\ para\ personalizar\ la\ velocidad\ de\ movimiento.\r\n\ Las\ subclases\ pueden\ sobrescribir\ este\ m\u00E9todo\ para\ cambiar\ velocidad.\r\n\ \r\n\ @return\ velocidad\ de\ movimiento\ (mayor\ \=\ m\u00E1s\ r\u00E1pido)\r\n
comment7.params=
comment7.target=void\ updateParts()
comment7.text=\r\n\ Actualiza\ las\ posiciones\ de\ las\ partes\ del\ robot\ basadas\ en\ positionX/Y\r\n\ actuales.\r\n\ DEBE\ ser\ implementado\ por\ cada\ subclase\ con\ su\ l\u00F3gica\ espec\u00EDfica.\r\n\ \r\n\ \u2705\ Esta\ es\ la\ \u00FAnica\ parte\ que\ cada\ robot\ debe\ personalizar\r\n
comment8.params=
comment8.target=void\ makeVisible()
comment8.text=\r\n\ Hace\ visible\ el\ robot\ (todas\ sus\ partes)\ si\ no\ lo\ est\u00E1.\r\n\ Implementado\ por\ subclases.\r\n
comment9.params=
comment9.target=void\ makeInvisible()
comment9.text=\r\n\ Hace\ invisible\ el\ robot\ (todas\ sus\ partes)\ si\ est\u00E1\ visible.\r\n\ Implementado\ por\ subclases.\r\n
numComments=19
