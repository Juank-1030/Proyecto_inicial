#BlueJ class context
comment0.target=SilkRoad
comment0.text=\r\n\ Clase\ principal\ que\ gestiona\ la\ SilkRoad,\ incluyendo\ tiendas,\ robots,\r\n\ movimientos,\ profit\ y\ visualizaci\u00F3n.\r\n\r\n\ @author\ Juan\ Carlos\ Bohorquez\ y\ Juan\ Diego\ Valderrama\r\n\ @version\ 3.5\r\n
comment1.params=length
comment1.target=SilkRoad(int)
comment1.text=\r\n\ Constructor\ que\ inicializa\ la\ SilkRoad\ con\ la\ longitud\ dada.\r\n\r\n\ @param\ length\ longitud\ de\ la\ SilkRoad\ (n\u00FAmero\ de\ celdas)\r\n
comment10.params=type
comment10.target=RobotAbstracto\ crearRobot(java.lang.String)
comment10.text=\r\n\ M\u00E9todo\ privado\ que\ crea\ un\ robot\ seg\u00FAn\ su\ tipo.\r\n\ ESTE\ ES\ EL\ \u00DANICO\ LUGAR\ donde\ se\ especifica\ qu\u00E9\ clase\ instanciar.\r\n\ Para\ agregar\ un\ nuevo\ tipo\:\ agregar\ un\ case\ aqu\u00ED.\r\n\ \r\n\ @param\ type\ tipo\ de\ robot\ ("normal",\ "neverback",\ "tender",\ etc.)\r\n\ @return\ instancia\ de\ RobotAbstracto\ del\ tipo\ pedido,\ o\ null\ si\ inv\u00E1lido\r\n
comment11.params=
comment11.target=void\ emptiedStores()
comment11.text=\r\n\ Muestra\ un\ mensaje\ con\ la\ lista\ de\ tiendas\ que\ est\u00E1n\ vac\u00EDas\ (tienen\ 0\r\n\ tenges).\r\n\ Cambia\ el\ color\ de\ las\ tiendas\ vac\u00EDas\ a\ negro\ para\ resaltarlas\ visualmente.\r\n\ Si\ no\ hay\ tiendas\ vac\u00EDas,\ muestra\ un\ mensaje\ informativo.\r\n
comment12.params=
comment12.target=void\ resupplyStores()
comment12.text=\r\n\ Restaura\ todas\ las\ tiendas\ a\ su\ valor\ original\ de\ tenges.\r\n\ Para\ cada\ tienda\ activa,\ recupera\ el\ valor\ original\ registrado\ y\ lo\ repone\ si\r\n\ es\ necesario.\r\n\ Ajusta\ el\ profit\ m\u00E1ximo\ acumulado\ y\ actualiza\ la\ barra\ de\ progreso.\r\n\ Muestra\ un\ mensaje\ informativo\ al\ finalizar.\r\n
comment13.params=location
comment13.target=void\ placeRobot(int)
comment13.text=\r\n\ Coloca\ un\ robot\ en\ la\ ubicaci\u00F3n\ dada\ si\ est\u00E1\ libre.\r\n\ Si\ hay\ una\ tienda\ con\ tenges\ se\ transfiere\ inmediatamente.\r\n\ \r\n\ @param\ location\ \u00EDndice\ de\ la\ celda\r\n
comment14.params=type\ location
comment14.target=void\ placeRobot(java.lang.String,\ int)
comment14.text=\r\n\ \u2705\ SOBRECARGADO\:\ Coloca\ un\ robot\ seg\u00FAn\ tipo\r\n\ \r\n\ Crea\ y\ posiciona\ robot\ seg\u00FAn\ el\ tipo\ especificado\:\r\n\ -\ "normal"\ \u2192\ Robot\ en\ posici\u00F3n\ indicada\r\n\ -\ "neverback"\ \u2192\ NeverbackRobot\ en\ posici\u00F3n\ indicada\r\n\ \r\n\ @param\ type\ \ \ \ \ tipo\ de\ robot\ ("normal"\ o\ "neverback"\ o\ "tender")\r\n\ @param\ location\ ubicaci\u00F3n\ para\ el\ robot\r\n
comment15.params=robot\ type\ location
comment15.target=void\ addRobotToLocation(RobotAbstracto,\ java.lang.String,\ int)
comment15.text=\r\n\ M\u00E9todo\ privado\ que\ posiciona\ el\ robot\ con\ validaciones.\r\n\ \r\n\ @param\ robot\ \ \ \ robot\ ya\ creado\r\n\ @param\ type\ \ \ \ \ tipo\ de\ robot\ para\ identificaci\u00F3n\r\n\ @param\ location\ ubicaci\u00F3n\ indicada\r\n
comment16.params=location\ meters
comment16.target=void\ moveRobot(int,\ int)
comment16.text=\r\n\ Mueve\ un\ robot\ existente\ a\ una\ nueva\ posici\u00F3n\ (location+meters).\r\n\ \r\n\ @param\ location\ posici\u00F3n\ actual\ del\ robot\r\n\ @param\ meters\ \ \ desplazamiento\ (positivo\ o\ negativo)\r\n
comment17.params=location\ meters\ r
comment17.target=void\ executeRobotMovement(int,\ int,\ RobotAbstracto)
comment17.text=\r\n\ M\u00E9todo\ privado\ que\ ejecuta\ el\ movimiento\ del\ robot.\r\n\ Centraliza\ toda\ la\ l\u00F3gica\ de\ movimiento,\ incluyendo\ validaciones\ especiales\r\n\ para\ NeverbackRobot.\r\n\ \r\n\ @param\ location\ posici\u00F3n\ actual\ del\ robot\r\n\ @param\ meters\ \ \ desplazamiento\ (positivo\ o\ negativo)\r\n\ @param\ r\ \ \ \ \ \ \ \ referencia\ al\ robot\ a\ mover\r\n
comment18.params=r\ meters
comment18.target=boolean\ validateRobotMovement(RobotAbstracto,\ int)
comment18.text=\r\n\ Valida\ si\ un\ robot\ puede\ realizar\ el\ movimiento\ especificado.\r\n\ Este\ m\u00E9todo\ es\ completamente\ gen\u00E9rico\ y\ funciona\ para\ TODOS\ los\ tipos\ de\ robots.\r\n\ Cada\ robot\ puede\ sobrescribir\ isMovementAllowed()\ para\ implementar\ su\ l\u00F3gica\ espec\u00EDfica.\r\n\ \r\n\ Ejemplo\ polim\u00F3rfico\:\r\n\ -\ Robot\:\ always\ returns\ true\ (permite\ cualquier\ movimiento)\r\n\ -\ NeverbackRobot\:\ valida\ seg\u00FAn\ direcci\u00F3n\ bloqueada\r\n\ -\ Futuros\ robots\:\ pueden\ agregar\ su\ propia\ l\u00F3gica\ sin\ modificar\ SilkRoad\r\n\ \r\n\ @param\ r\ \ \ \ \ \ referencia\ al\ robot\ (cualquier\ tipo)\r\n\ @param\ meters\ desplazamiento\ propuesto\r\n\ @return\ true\ si\ el\ movimiento\ es\ permitido,\ false\ si\ est\u00E1\ bloqueado\r\n
comment19.params=
comment19.target=void\ moveRobots()
comment19.text=\r\n\ Realiza\ el\ movimiento\ \u00F3ptimo\ de\ los\ robots\ hacia\ las\ tiendas\ activas\ para\r\n\ maximizar\ la\ ganancia.\r\n\ Utiliza\ una\ estrategia\ greedy\:\ para\ cada\ tienda,\ selecciona\ el\ robot\ que\r\n\ puede\ obtener\ la\ mayor\ ganancia\ neta\r\n\ (tenges\ de\ la\ tienda\ menos\ la\ distancia\ recorrida).\ Solo\ se\ realizan\r\n\ movimientos\ si\ la\ ganancia\ es\ mayor\ o\ igual\ a\ cero.\r\n\ Al\ finalizar,\ muestra\ un\ resumen\ con\ la\ ganancia\ obtenida,\ el\ profit\ total\r\n\ acumulado\ y\ la\ ganancia\ m\u00E1xima\ te\u00F3rica.\r\n
comment2.params=schedule
comment2.target=SilkRoad(int[][])
comment2.text=\r\n\ Constructor\ que\ inicializa\ la\ SilkRoad\ con\ un\ schedule\ de\ eventos\ diarios.\r\n\ Cada\ evento\ en\ el\ schedule\ es\ un\ array\:\r\n\ -\ [1,\ x]\ para\ colocar\ un\ robot\ en\ la\ posici\u00F3n\ x\r\n\ -\ [2,\ x,\ c]\ para\ colocar\ una\ tienda\ en\ la\ posici\u00F3n\ x\ con\ c\ tenges\r\n\r\n\ El\ primer\ elemento\ del\ schedule\ (schedule[0])\ debe\ ser\ [n,\ 0]\ donde\ n\ es\r\n\ el\ n\u00FAmero\ total\ de\ reboots\ (d\u00EDas)\ que\ se\ simular\u00E1n.\r\n\r\n\ @param\ schedule\ matriz\ de\ eventos\ diarios\r\n
comment20.params=robots\ tiendas
comment20.target=int\ calculateMaxProfitGreedy(java.util.List,\ java.util.List)
comment20.text=\r\n\ Calcula\ la\ ganancia\ m\u00E1xima\ te\u00F3rica\ utilizando\ una\ estrategia\ greedy.\r\n\ Para\ cada\ tienda,\ selecciona\ el\ robot\ que\ puede\ obtener\ la\ mayor\ ganancia\r\n\ neta\r\n\ (tenges\ de\ la\ tienda\ menos\ la\ distancia\ recorrida).\ Solo\ se\ consideran\r\n\ ganancias\ >\=\ 0.\r\n\r\n\ @param\ robots\ \ lista\ de\ posiciones\ de\ robots\ activos\r\n\ @param\ tiendas\ lista\ de\ posiciones\ de\ tiendas\ activas\r\n\ @return\ ganancia\ m\u00E1xima\ te\u00F3rica\ posible\r\n
comment21.params=
comment21.target=java.util.List\ getActiveRobots()
comment21.text=\r\n\ Obtiene\ la\ lista\ de\ posiciones\ de\ robots\ activos\ (no\ nulos).\r\n\ \r\n\ @return\ Lista\ sorted\ de\ posiciones\ de\ robots\ activos.\r\n
comment22.params=
comment22.target=java.util.List\ getActiveStores()
comment22.text=\r\n\ Obtiene\ la\ lista\ de\ posiciones\ de\ tiendas\ activas\ (con\ tenges\ >\ 0).\r\n\ \r\n\ @return\ Lista\ sorted\ de\ posiciones\ de\ tiendas\ activas.\r\n
comment23.params=
comment23.target=void\ returnRobots()
comment23.text=\r\n\ Devuelve\ todos\ los\ robots\ a\ su\ posici\u00F3n\ original\ registrada.\r\n\ Conserva\ los\ tenges\ actuales\ de\ cada\ robot.\r\n\ Muestra\ mensajes\ informativos\ seg\u00FAn\ el\ estado\ (visible/invisible).\r\n
comment24.params=
comment24.target=void\ makeInvisible()
comment24.text=\r\n\ Oculta\ todos\ los\ elementos\ visuales\ de\ SilkRoad.\r\n\ No\ elimina\ ni\ modifica\ datos\ l\u00F3gicos,\ solo\ la\ representaci\u00F3n\ gr\u00E1fica.\r\n\ Si\ ya\ est\u00E1\ invisible,\ muestra\ un\ mensaje\ y\ no\ realiza\ cambios.\r\n
comment25.params=
comment25.target=void\ makeVisible()
comment25.text=\r\n\ Muestra\ todos\ los\ elementos\ visuales\ de\ SilkRoad\ en\ sus\ posiciones\ actuales.\r\n\ Si\ ya\ est\u00E1\ visible,\ muestra\ un\ mensaje\ y\ no\ realiza\ cambios.\r\n\ Restaura\ las\ posiciones\ l\u00F3gicas\ actuales\ de\ tiendas\ y\ robots.\r\n
comment26.params=fast
comment26.target=void\ setFastMovement(boolean)
comment26.text=\r\n\ Activa\ o\ desactiva\ el\ modo\ de\ movimiento\ r\u00E1pido\ para\ los\ robots.\r\n\ Si\ est\u00E1\ activado,\ los\ robots\ se\ mover\u00E1n\ instant\u00E1neamente\ sin\ animaci\u00F3n\r\n\ visual.\r\n\r\n\ @param\ fast\ true\ para\ activar\ el\ movimiento\ r\u00E1pido,\ false\ para\ desactivarlo.\r\n
comment27.params=
comment27.target=void\ reboot()
comment27.text=\r\n\ Reinicia\ el\ estado\ de\ la\ SilkRoad\ a\ su\ configuraci\u00F3n\ original.\r\n\ Si\ est\u00E1\ en\ modo\ d\u00EDa\ (dayMode),\ avanza\ el\ schedule\ y\ agrega\ los\ objetos\r\n\ correspondientes.\r\n\ Restaura\ los\ tenges\ originales\ de\ todas\ las\ tiendas,\ devuelve\ los\ robots\ a\ su\r\n\ posici\u00F3n\ inicial,\r\n\ reinicia\ los\ tenges\ de\ los\ robots\ a\ 0,\ resetea\ el\ profit\ acumulado\ y\r\n\ actualiza\ la\ barra\ de\ progreso.\r\n\ Muestra\ un\ mensaje\ informativo\ si\ la\ visualizaci\u00F3n\ est\u00E1\ activa.\r\n
comment28.params=silentMode
comment28.target=void\ checkReboots(boolean)
comment28.text=\r\n\ Verifica\ el\ n\u00FAmero\ de\ reboots\ y\ agrega\ los\ objetos\ correspondientes\r\n\ seg\u00FAn\ la\ entrada\ schedule.\r\n\ Llama\ autom\u00E1ticamente\ desde\ reboot()\ si\ dayMode\ est\u00E1\ activo.\r\n\ \r\n\ @param\ silentMode\ true\ si\ no\ debe\ mostrar\ di\u00E1logos\ (e.g.,\ modo\ invisible)\r\n
comment29.params=
comment29.target=int\ profit()
comment29.text=\r\n\ Devuelve\ el\ profit\ (ganancia\ total\ acumulada)\ actual\ de\ la\ SilkRoad.\r\n\r\n\ @return\ el\ valor\ actual\ de\ profit\ (tenges\ acumulados\ por\ los\ robots\ menos\ los\r\n\ \ \ \ \ \ \ \ \ costos\ de\ movimiento)\r\n
comment3.params=
comment3.target=int\ getLength()
comment30.params=
comment30.target=int[][]\ stores()
comment30.text=\r\n\ @return\ matriz\ de\ tiendas\ (puede\ contener\ filas\ vac\u00EDas\ con\ ceros).\r\n
comment31.params=
comment31.target=int[][]\ robots()
comment31.text=\r\n\ Devuelve\ la\ matriz\ interna\ que\ representa\ los\ robots\ en\ la\ SilkRoad.\r\n\ Cada\ fila\ contiene\ informaci\u00F3n\ sobre\ un\ robot\:\r\n\ -\ robots[i][0]\:\ posici\u00F3n\ del\ robot\ (\u00EDndice\ de\ celda)\r\n\ -\ robots[i][1]\:\ cantidad\ de\ tenges\ que\ posee\ el\ robot\ en\ esa\ posici\u00F3n\r\n\r\n\ @return\ matriz\ de\ robots\ (puede\ contener\ filas\ vac\u00EDas\ con\ ceros\ si\ no\ hay\r\n\ \ \ \ \ \ \ \ \ robot\ en\ esa\ posici\u00F3n)\r\n
comment32.params=
comment32.target=void\ finish()
comment32.text=\r\n\ Finaliza\ la\ simulaci\u00F3n\ de\ SilkRoad,\ limpiando\ y\ liberando\ todos\ los\ recursos.\r\n\ Oculta\ la\ interfaz\ gr\u00E1fica,\ elimina\ referencias\ a\ objetos\ gr\u00E1ficos,\r\n\ resetea\ arrays\ l\u00F3gicos\ y\ campos\ globales,\ y\ libera\ memoria.\r\n\ Despu\u00E9s\ de\ llamar\ a\ este\ m\u00E9todo,\ la\ instancia\ de\ SilkRoad\ no\ debe\ usarse\ m\u00E1s.\r\n\ Muestra\ un\ mensaje\ informativo\ si\ la\ visualizaci\u00F3n\ est\u00E1\ activa.\r\n
comment33.params=
comment33.target=boolean\ ok()
comment33.text=\r\n\ Indica\ si\ la\ \u00FAltima\ operaci\u00F3n\ realizada\ fue\ exitosa.\r\n\r\n\ @return\ true\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa,\ false\ en\ caso\ contrario.\r\n
comment34.params=
comment34.target=void\ consultStatistics()
comment34.text=\r\n\ Muestra\ una\ ventana\ con\ las\ estad\u00EDsticas\ actuales\ de\ la\ SilkRoad.\r\n\ Incluye\ profit\ total,\ n\u00FAmero\ de\ celdas,\ detalles\ de\ robots\ y\ tiendas\ activas.\r\n\ Si\ no\ hay\ robots\ o\ tiendas,\ indica\ que\ no\ hay\ elementos\ activos.\r\n\ Utiliza\ JOptionPane\ para\ mostrar\ la\ informaci\u00F3n\ en\ un\ cuadro\ de\ di\u00E1logo.\r\n
comment35.params=robotCurrentTenges
comment35.target=int\ transferTengesIfCoincide(int)
comment35.text=\r\n\ Verifica\ si\ alg\u00FAn\ robot\ coincide\ con\ una\ tienda\ en\ la\ misma\ celda.\r\n\ Si\ hay\ coincidencia\ y\ la\ tienda\ tiene\ tenges,\ el\ robot\ recoge\ todos\ los\r\n\ tenges,\r\n\ la\ tienda\ se\ vac\u00EDa,\ y\ se\ muestra\ un\ mensaje\ informativo.\r\n\ Para\ FighterStore\:\ solo\ permite\ recolecci\u00F3n\ si\ robot\ tiene\ m\u00E1s\ tenges\ que\ la\r\n\ tienda.\r\n\r\n\ @param\ robotCurrentTenges\ tenges\ actuales\ acumulados\ del\ robot\r\n\ @return\ la\ cantidad\ de\ tenges\ recogidos\ por\ el\ robot,\ o\ 0\ si\ no\ hubo\r\n\ \ \ \ \ \ \ \ \ recolecci\u00F3n.\r\n
comment36.params=location\ collected\ totalDisponible
comment36.target=int\ transferTengesPolimorficos(int,\ int,\ int)
comment36.text=\r\n\ Realiza\ la\ transferencia\ de\ tenges\ usando\ polimorfismo.\r\n\ El\ robot\ decide\ cu\u00E1ntos\ tenges\ recolecta,\ SilkRoad\ actualiza\ el\ estado.\r\n\ \r\n\ @param\ location\ posici\u00F3n\ de\ la\ tienda\r\n\ @param\ collected\ cantidad\ que\ el\ robot\ recolecta\ (definido\ por\ el\ robot)\r\n\ @param\ totalDisponible\ cantidad\ total\ que\ hab\u00EDa\ en\ la\ tienda\r\n\ @return\ cantidad\ de\ tenges\ recolectados\r\n
comment37.params=location\ mensaje
comment37.target=int\ mostrarRechazo(int,\ java.lang.String)
comment37.text=\r\n\ Realiza\ una\ transferencia\ normal\ de\ tenges\ de\ la\ tienda\ al\ robot.\r\n\ \ \ \ /**\r\n\ \u2705\ FASE\ 5\:\ Mostrar\ di\u00E1logo\ de\ rechazo\ cuando\ tienda\ no\ acepta\ robot.\r\n\ M\u00E9todo\ gen\u00E9rico\ para\ cualquier\ tienda\ que\ rechace.\r\n\ \r\n\ @param\ location\ \ \ \ posici\u00F3n\ de\ la\ tienda\r\n\ @param\ robotTenges\ tenges\ actuales\ del\ robot\r\n\ @param\ storeTenges\ tenges\ de\ la\ tienda\r\n\ @return\ 0\ (sin\ transferencia)\r\n
comment38.params=location
comment38.target=void\ removeStore(int)
comment38.text=\r\n\ Elimina\ una\ tienda\ en\ la\ ubicaci\u00F3n\ dada\ (si\ existe).\r\n\ Actualiza\ el\ profit\ m\u00E1ximo\ y\ la\ barra\ de\ progreso.\r\n\r\n\ @param\ location\ \u00EDndice\ de\ la\ celda\r\n
comment39.params=location
comment39.target=void\ removeRobot(int)
comment39.text=\r\n\ Elimina\ un\ robot\ en\ la\ ubicaci\u00F3n\ dada\ (si\ existe).\r\n\ \r\n\ @param\ location\ \u00EDndice\ de\ la\ celda\r\n
comment4.params=
comment4.target=void\ profitPerMove()
comment40.params=
comment40.target=void\ updateMaxProfit()
comment40.text=\r\n\ Actualiza\ el\ valor\ de\ maxProfit\ basado\ en\ las\ tiendas\ y\ robots\ actuales.\r\n\ Considera\ los\ tenges\ totales\ en\ tiendas\ y\ el\ costo\ de\ mover\ los\ robots\r\n\ desde\ su\ posici\u00F3n\ original\ (si\ se\ conoce).\r\n\ Asegura\ que\ maxProfit\ sea\ al\ menos\ 1\ para\ evitar\ divisi\u00F3n\ por\ cero\ en\ la\r\n\ barra.\r\n\ Finalmente,\ actualiza\ la\ barra\ de\ progreso\ con\ el\ nuevo\ valor\ de\ maxProfit.\r\n
comment41.params=
comment41.target=void\ updateProgressBar()
comment41.text=\r\n\ Actualiza\ la\ barra\ de\ progreso\ para\ reflejar\ el\ profit\ actual\ frente\ al\r\n\ maxProfit.\r\n\ Si\ progressBar\ es\ null,\ no\ hace\ nada.\r\n\ Asegura\ que\ el\ tope\ sea\ al\ menos\ 1\ para\ evitar\ divisi\u00F3n\ por\ cero.\r\n
comment5.params=location\ tenges
comment5.target=void\ placeStore(int,\ int)
comment5.text=\r\n\ Coloca\ una\ tienda\ normal\ en\ la\ ubicaci\u00F3n\ dada\ si\ est\u00E1\ libre.\r\n\r\n\ @param\ location\ \u00EDndice\ de\ la\ celda\r\n\ @param\ tenges\ \ \ cantidad\ inicial\ de\ tenges\ en\ la\ tienda\r\n
comment6.params=type\ location\ tenges
comment6.target=void\ placeStore(java.lang.String,\ int,\ int)
comment6.text=\r\n\ \u2705\ SOBRECARGADO\:\ Coloca\ una\ tienda\ seg\u00FAn\ tipo\r\n\ \r\n\ Crea\ y\ posiciona\ tienda\ seg\u00FAn\ el\ tipo\ especificado\:\r\n\ -\ "normal"\ \u2192\ Store\ en\ posici\u00F3n\ indicada\r\n\ -\ "autonomous"\ \u2192\ AutonomousStore\ elige\ posici\u00F3n\ aleatoria\r\n\ -\ "fighter"\ \u2192\ FighterStore\ en\ posici\u00F3n\ indicada\r\n\ \r\n\ @param\ type\ \ \ \ \ tipo\ de\ tienda\ ("normal",\ "autonomous"\ o\ "fighter")\r\n\ @param\ location\ ubicaci\u00F3n\ para\ la\ tienda\ (ignorada\ si\ es\ aut\u00F3noma)\r\n\ @param\ tenges\ \ \ cantidad\ inicial\ de\ tenges\ en\ la\ tienda\r\n
comment7.params=store\ type\ location\ tenges
comment7.target=void\ addStoreToLocation(StoreAbstracto,\ java.lang.String,\ int,\ int)
comment7.text=\r\n\ M\u00E9todo\ privado\ que\ posiciona\ la\ tienda\ con\ validaciones.\r\n\ Determina\ autom\u00E1ticamente\ la\ ubicaci\u00F3n\ para\ tiendas\ aut\u00F3nomas.\r\n\ \r\n\ @param\ store\ \ \ \ tienda\ ya\ creada\r\n\ @param\ type\ \ \ \ \ tipo\ de\ tienda\ para\ identificaci\u00F3n\r\n\ @param\ location\ ubicaci\u00F3n\ indicada\ (puede\ ser\ ignorada)\r\n\ @param\ tenges\ \ \ cantidad\ de\ tenges\r\n
comment8.params=
comment8.target=int\ encontrarPosicionRandom()
comment8.text=\r\n\ Encuentra\ una\ posici\u00F3n\ aleatoria\ disponible\ en\ la\ carretera.\r\n\ Utilizada\ exclusivamente\ por\ tiendas\ aut\u00F3nomas\ (AutonomousStore).\r\n\ Verifica\ que\ la\ posici\u00F3n\ no\ est\u00E9\ ocupada\ por\ otra\ tienda.\r\n\ \r\n\ @return\ \u00EDndice\ de\ posici\u00F3n\ aleatoria\ disponible,\ o\ -1\ si\ no\ hay\ disponibles\r\n
comment9.params=type
comment9.target=StoreAbstracto\ crearTienda(java.lang.String)
comment9.text=\r\n\ M\u00E9todo\ privado\ que\ crea\ una\ tienda\ seg\u00FAn\ su\ tipo.\r\n\ ESTE\ ES\ EL\ \u00DANICO\ LUGAR\ donde\ se\ especifica\ qu\u00E9\ clase\ instanciar.\r\n\ Para\ agregar\ un\ nuevo\ tipo\:\ agregar\ un\ case\ aqu\u00ED.\r\n\ \r\n\ @param\ type\ tipo\ de\ tienda\ ("normal",\ "autonomous",\ "fighter",\ etc.)\r\n\ @return\ instancia\ de\ StoreAbstracto\ del\ tipo\ pedido,\ o\ null\ si\ inv\u00E1lido\r\n
numComments=42
