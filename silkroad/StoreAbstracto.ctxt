#BlueJ class context
comment0.target=StoreAbstracto
comment0.text=\r\n\ Clase\ abstracta\ que\ define\ la\ estructura\ base\ para\ todas\ las\ tiendas\ en\r\n\ SilkRoad.\r\n\ Contiene\ la\ l\u00F3gica\ com\u00FAn\ de\ movimiento,\ visualizaci\u00F3n\ y\ posicionamiento.\r\n\ \r\n\ Las\ subclases\ (Store,\ BigStore,\ ExpressStore,\ etc.)\ solo\ necesitan\:\r\n\ -\ Inicializar\ las\ partes\ visuales\ (base,\ techo)\ en\ el\ constructor\r\n\ -\ Implementar\ makeVisible()\ y\ makeInvisible()\ si\ es\ necesario\ personalizar\r\n\ -\ Personalizar\ getRandomColor()\ o\ m\u00E9todos\ si\ es\ necesario\r\n\r\n\ @author\ Sistema\ de\ Herencia\ -\ Ciclo\ 3\r\n\ @version\ 1.0\r\n
comment1.params=visible
comment1.target=StoreAbstracto(boolean)
comment1.text=\r\n\ Constructor\ base\ para\ todas\ las\ tiendas.\r\n\ \r\n\ @param\ visible\ estado\ inicial\ de\ visibilidad\r\n
comment10.params=
comment10.target=java.lang.String\ getColor()
comment10.text=\r\n\ @return\ color\ actual\ de\ la\ tienda\r\n
comment11.params=
comment11.target=boolean\ isVisible()
comment11.text=\r\n\ @return\ true\ si\ la\ tienda\ est\u00E1\ visible\r\n
comment12.params=tengesRecolectados
comment12.target=int\ validarTransferencia(int)
comment12.text=\r\n\ \u2705\ PATR\u00D3N\ MEDIATOR\:\ Store\ valida\ la\ transferencia.\r\n\ Store\ no\ conoce\ al\ robot\ espec\u00EDfico,\ solo\ valida\ la\ cantidad\ solicitada.\r\n\ Road\ act\u00FAa\ como\ intermediario.\r\n\ \r\n\ @param\ tengesRecolectados\ cantidad\ de\ tenges\ que\ el\ robot\ recolect\u00F3\r\n\ @return\ cantidad\ real\ de\ tenges\ que\ la\ tienda\ transfiere\ (puede\ ser\ diferente)\r\n
comment13.params=cantidadSolicitada
comment13.target=int\ transferirTenges(int)
comment13.text=\r\n\ Transfiere\ tenges\ de\ la\ tienda\ al\ robot.\r\n\ Puede\ ser\ sobrescrito\ por\ subclases\ para\ implementar\ l\u00F3gica\ personalizada\r\n\ (ej\:\ BigStore\ que\ da\ m\u00E1s,\ ExpressStore\ que\ cobra\ comisi\u00F3n,\ etc.)\r\n\ \r\n\ @param\ cantidadSolicitada\ cantidad\ de\ tenges\ solicitados\r\n\ @return\ cantidad\ real\ de\ tenges\ que\ la\ tienda\ transfiere\r\n
comment14.params=
comment14.target=int\ getTengesActuales()
comment14.text=\r\n\ @return\ cantidad\ actual\ de\ tenges\ disponibles\ en\ la\ tienda\r\n
comment15.params=robotTenges\ storeTenges
comment15.target=boolean\ puedeRecibirRobot(int,\ int)
comment15.text=\r\n\ \u2705\ SINGLE\ RESPONSIBILITY\:\ Cada\ tienda\ decide\ si\ puede\ recibir\ al\ robot.\r\n\ Delegaci\u00F3n\ completa\:\ SilkRoad\ no\ hace\ instanceof\ ni\ validaciones\ especiales.\r\n\ \r\n\ Flujo\:\r\n\ 1.\ Store\ determina\ si\ acepta\ al\ robot\ (puede\ tener\ restricciones)\r\n\ 2.\ Si\ NO\ acepta,\ retorna\ false\ (robot\ no\ recibe\ tenges)\r\n\ 3.\ Si\ S\u00CD\ acepta,\ contin\u00FAa\ con\ la\ transferencia\r\n\ \r\n\ Ejemplos\ de\ override\:\r\n\ -\ Store\ normal\:\ siempre\ retorna\ true\ (acepta\ todos)\r\n\ -\ FighterStore\:\ retorna\ false\ si\ robot\ es\ d\u00E9bil\ (tenges\ <\=\ storeTenges)\r\n\ -\ ProtectedStore\:\ retorna\ false\ si\ robot\ no\ pasa\ verificaci\u00F3n,\ etc.\r\n\ \r\n\ @param\ robotTenges\ tenges\ actuales\ del\ robot\r\n\ @param\ storeTenges\ tenges\ de\ la\ tienda\r\n\ @return\ true\ si\ la\ tienda\ acepta\ el\ robot,\ false\ si\ lo\ rechaza\r\n
comment16.params=tengesRecolectados
comment16.target=int\ procesarTransferencia(int)
comment16.text=\r\n\ \u2705\ OPEN/CLOSED\:\ Cada\ tienda\ procesa\ la\ transferencia\ seg\u00FAn\ su\ l\u00F3gica.\r\n\ SilkRoad\ solo\ orquesta,\ no\ implementa\ l\u00F3gica\ de\ transferencia.\r\n\ \r\n\ Flujo\:\r\n\ 1.\ Store\ recibe\ cantidad\ de\ tenges\ que\ el\ robot\ recolect\u00F3\r\n\ 2.\ Store\ aplica\ su\ l\u00F3gica\ (puede\ rechazar,\ cobrar\ comisi\u00F3n,\ etc.)\r\n\ 3.\ Store\ retorna\ cantidad\ final\ que\ transfiere\r\n\ \r\n\ Ejemplos\ de\ override\:\r\n\ -\ Store\ normal\:\ transfiere\ exactamente\ lo\ solicitado\r\n\ -\ BigStore\:\ transfiere\ 150%\ de\ lo\ solicitado\r\n\ -\ ExpressStore\:\ cobra\ 10%\ de\ comisi\u00F3n\r\n\ -\ VaultStore\:\ rechaza\ si\ cantidad\ >\ umbral\r\n\ \r\n\ @param\ tengesRecolectados\ cantidad\ de\ tenges\ que\ el\ robot\ recolect\u00F3\r\n\ @return\ cantidad\ final\ de\ tenges\ a\ transferir\ (puede\ ser\ 0,\ 100%,\ 150%,\ etc.)\r\n
comment17.params=robotTenges\ storeTenges
comment17.target=java.lang.String\ obtenerMensajeRechazo(int,\ int)
comment17.text=\r\n\ \u2705\ ENCAPSULACI\u00D3N\:\ Cada\ tienda\ genera\ su\ propio\ mensaje\ de\ rechazo.\r\n\ SilkRoad\ no\ sabe\ QU\u00C9\ tienda\ rechaza\ ni\ POR\ QU\u00C9.\r\n\ \r\n\ Flujo\:\r\n\ 1.\ SilkRoad\ pregunta\:\ \u00BFAceptas\ este\ robot?\r\n\ 2.\ Si\ respuesta\ es\ NO,\ SilkRoad\ pide\ el\ mensaje\r\n\ 3.\ Tienda\ retorna\ su\ mensaje\ personalizado\r\n\ 4.\ SilkRoad\ solo\ muestra\ el\ mensaje\ (agn\u00F3stico)\r\n\ \r\n\ Ejemplos\:\r\n\ -\ Store\:\ retorna\ ""\ (nunca\ rechaza,\ nunca\ muestra\ mensaje)\r\n\ -\ FighterStore\:\ retorna\ "\u00A1Robot\ d\u00E9bil\!\ No\ tienes\ poder\ suficiente..."\r\n\ -\ VaultStore\:\ retorna\ "\u00A1Cantidad\ muy\ alta\!\ Supera\ el\ l\u00EDmite\ de\ la\ b\u00F3veda..."\r\n\ \r\n\ @param\ robotTenges\ tenges\ actuales\ del\ robot\r\n\ @param\ storeTenges\ tenges\ de\ la\ tienda\r\n\ @return\ mensaje\ personalizado\ del\ rechazo\ (vac\u00EDo\ si\ no\ rechaza)\r\n
comment2.params=x\ y
comment2.target=void\ moveTo(int,\ int)
comment2.text=\r\n\ Traslada\ la\ tienda\ a\ coordenadas\ absolutas\ y\ la\ hace\ visible.\r\n\ \r\n\ @param\ x\ nueva\ coordenada\ X\r\n\ @param\ y\ nueva\ coordenada\ Y\r\n
comment3.params=x\ y
comment3.target=void\ setPosition(int,\ int)
comment3.text=\r\n\ Reposiciona\ la\ tienda\ usando\ desplazamiento\ relativo.\r\n\ \r\n\ @param\ x\ nueva\ coordenada\ X\r\n\ @param\ y\ nueva\ coordenada\ Y\r\n
comment4.params=newColor
comment4.target=void\ changeColor(java.lang.String)
comment4.text=\r\n\ Cambia\ el\ color\ de\ la\ base\ de\ la\ tienda.\r\n\ \r\n\ @param\ newColor\ nuevo\ color\ (string)\r\n
comment5.params=
comment5.target=void\ makeVisible()
comment5.text=\r\n\ Hace\ visible\ la\ tienda\ (si\ no\ lo\ estaba).\r\n\ Implementado\ por\ subclases\ si\ es\ necesario\ personalizar.\r\n
comment6.params=
comment6.target=void\ makeInvisible()
comment6.text=\r\n\ Hace\ invisible\ la\ tienda\ (si\ estaba\ visible).\r\n\ Implementado\ por\ subclases\ si\ es\ necesario\ personalizar.\r\n
comment7.params=
comment7.target=java.lang.String\ getRandomColor()
comment7.text=\r\n\ Selecciona\ un\ color\ aleatorio\ para\ la\ tienda.\r\n\ Disponible\ para\ todas\ las\ subclases.\r\n\ \r\n\ @return\ color\ elegido\r\n
comment8.params=
comment8.target=int\ getX()
comment8.text=\r\n\ @return\ coordenada\ X\ actual\ de\ la\ tienda\r\n
comment9.params=
comment9.target=int\ getY()
comment9.text=\r\n\ @return\ coordenada\ Y\ actual\ de\ la\ tienda\r\n
numComments=18
